/* normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden],
template {
  display: none; }

a {
  background-color: transparent; }

a:active {
  outline: 0; }

a:hover {
  outline: 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b,
strong {
  font-weight: 700; }

cite {
  font-style: normal; }

dfn {
  font-style: italic; }

h1 {
  font-size: 2em;
  margin: 0.67em 0; }

mark {
  background: #ff0;
  color: #000; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 1em 40px; }

hr {
  box-sizing: content-box;
  height: 0; }

pre {
  overflow: auto; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0; }

button {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled],
html input[disabled] {
  cursor: default; }

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

input {
  line-height: normal; }

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0; }

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box; }

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto; }

optgroup {
  font-weight: bold; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.teaser {
  font-size: 1.25em; }

.heading--small {
  font-size: calc(1.5rem + .3125vw);
  text-transform: uppercase;
  text-align: center; }

.text--small {
  font-size: 0.707em;
  line-height: 1.5;
  color: #808080; }

html {
  box-sizing: border-box; }

*,
*::before,
*::after {
  box-sizing: inherit; }

@-moz-viewport {
  width: device-width; }

@-ms-viewport {
  width: device-width; }

@-o-viewport {
  width: device-width; }

@-webkit-viewport {
  width: device-width; }

@viewport {
  width: device-width; }

html {
  font-size: 62.5%;
  -webkit-tap-highlight-color: transparent; }

body {
  font-family: "proxima-nova", sans-serif;
  font-size: calc(1.5rem + .3125vw);
  line-height: 1.5;
  color: #0f0f0f;
  background-color: #fff; }

[tabindex="-1"]:focus {
  outline: none !important; }

h1, h2, h3, h4, h5, h6 {
  font-family: "freight-sans-condensed-pro", sans-serif;
  font-weight: 700;
  line-height: 1.2;
  margin: 0 0 calc(2.3rem + .3125vw); }

h1 {
  font-size: 2.441em; }

h2 {
  font-size: 1.953em; }

h3 {
  font-size: 1.563em; }

h4 {
  font-size: 1.25em; }

p {
  margin-top: 0;
  margin-bottom: calc(2.3rem + .3125vw); }

abbr[title],
abbr[data-original-title] {
  cursor: help;
  border-bottom: 1px dotted #fc4e4e; }

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit; }

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem; }

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0; }

dt {
  font-weight: 700; }

dd {
  margin-bottom: .5rem;
  margin-left: 0; }

blockquote {
  margin: 0 0 1rem; }

a {
  color: #fc4e4e;
  text-decoration: none; }
  a:hover, a:focus {
    color: #fc3535;
    text-decoration: underline; }

pre {
  margin-top: 0;
  margin-bottom: 1rem; }

figure {
  margin: 0 0 1rem; }

img {
  vertical-align: middle;
  max-width: 100%; }

[role="button"] {
  cursor: pointer; }

a,
area,
button,
[role="button"],
input,
label,
select,
summary,
textarea {
  -ms-touch-action: manipulation;
      touch-action: manipulation; }

th {
  text-align: left; }

label {
  display: inline-block;
  margin-bottom: .5rem; }

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color; }

input,
button,
select,
textarea {
  margin: 0;
  line-height: inherit;
  border-radius: 0; }

textarea {
  resize: vertical; }

fieldset {
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0; }

legend {
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: .5rem;
  font-size: 1.5rem;
  line-height: inherit; }

input[type="search"] {
  box-sizing: inherit;
  -webkit-appearance: none; }

output {
  display: inline-block; }

[hidden] {
  display: none !important; }

/**
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    contenteditable attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that are clearfixed.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.cf:before,
.cf:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */ }

.cf:after {
  clear: both; }

/**
 * For IE 6/7 only
 * Include this rule to trigger hasLayout and contain floats.
 */
.cf {
  *zoom: 1; }

.icon {
  display: inline-block;
  width: 20px;
  height: 20px;
  vertical-align: middle;
  margin-right: 5px; }
  .icon svg {
    width: 100%;
    height: 100%; }
  .icon path {
    fill: currentColor; }

/* Page Wrapper Component */
.wrapper {
  margin: 0 auto;
  padding: 0 calc(1.1rem + .3125vw);
  max-width: 144rem; }
  @media (min-width: 768px) {
    .wrapper {
      padding: 0 5vw; } }
  @media (min-width: 144rem) {
    .wrapper {
      padding: 0 12rem; } }

.main {
  padding: calc(7.1rem + .3125vw) 0 calc(1.5rem + .3125vw);
  overflow: hidden; }
  @media (min-width: 768px) {
    .main {
      padding: calc(9.5rem + .3125vw) 0 calc(1.5rem + .3125vw); } }
  @media (min-width: 1000px) {
    .main {
      padding: calc(9.5rem + .3125vw) 0 calc(7.1rem + .3125vw); } }

@supports not (display: grid) {
  header .wrapper,
  main .wrapper {
    max-width: 600px; } }

/* Page Grid Component */
@media (min-width: 768px) {
  .grid {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-column-gap: calc(1.5rem + .3125vw);
    grid-row-gap: calc(4.7rem + .3125vw); } }

/* Header Component */
.header {
  position: relative;
  padding: calc(2.3rem + .3125vw) 0; }
  .header:after {
    content: " ";
    position: absolute;
    top: 115%;
    width: 100%;
    height: 4px;
    background: #fc4e4e;
    -webkit-transform: skew(0, 2deg);
        -ms-transform: skew(0, 2deg);
            transform: skew(0, 2deg); }
  @media (min-width: 768px) {
    .header {
      padding: calc(4.7rem + .3125vw) 0; } }

.logo {
  margin: 0 auto calc(4.7rem + .3125vw);
  max-width: calc(7.1rem + .3125vw); }
  @media (min-width: 768px) {
    .logo {
      margin: 0 0 calc(4.7rem + .3125vw);
      grid-column: 2 / 4; } }
  @media (min-width: 1000px) {
    .logo {
      grid-column: 3 / 5; } }
  @media (min-width: 1268px) {
    .logo {
      grid-column: 4 / 5; } }
  @media (min-width: 1920px) {
    .logo {
      grid-column: 3 / 4; } }

@media (min-width: 768px) {
  .nav {
    grid-column: 4 / 11;
    grid-row: 1 / 2;
    -ms-flex-item-align: center;
        align-self: center; } }

@media (min-width: 1000px) {
  .nav {
    grid-column: 5 / 10; } }

@media (min-width: 1268px) {
  .nav {
    grid-column: 6 / 10; } }

@media (min-width: 1920px) {
  .nav {
    grid-column: 5 / 10; } }

.nav__items {
  list-style-type: none;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  margin: 0;
  padding: 0; }
  @media (min-width: 768px) {
    .nav__items {
      -webkit-box-pack: start;
          -ms-flex-pack: start;
              justify-content: flex-start; } }

@media (min-width: 768px) {
  .nav__item {
    margin-left: calc(7.1rem + .3125vw); }
    .nav__item:first-child {
      margin-left: 0; } }

@media (min-width: 1000px) {
  .nav__item {
    margin-left: calc(2.3rem + .3125vw); }
    .nav__item:first-child {
      margin-left: 0; } }

@media (min-width: 1268px) {
  .nav__item {
    margin-left: calc(4.7rem + .3125vw); }
    .nav__item:first-child {
      margin-left: 0; } }

@media (min-width: 1920px) {
  .nav__item {
    margin-left: calc(7.1rem + .3125vw); }
    .nav__item:first-child {
      margin-left: 0; } }

.nav__link {
  position: relative;
  padding: calc(0.3rem + .3125vw);
  text-decoration: none;
  text-transform: uppercase;
  font-weight: bold;
  white-space: nowrap; }
  .nav__link:hover {
    text-decoration: none; }
    .nav__link:hover:before {
      content: " ";
      position: absolute;
      top: 100%;
      right: 0;
      left: 0;
      height: 2px;
      background: #fc4e4e;
      -webkit-transform: skew(0, 2deg);
          -ms-transform: skew(0, 2deg);
              transform: skew(0, 2deg); }
  .nav__link:active {
    text-decoration: none; }

.nav__link--active:before {
  content: " ";
  position: absolute;
  top: 100%;
  right: 0;
  left: 0;
  height: 2px;
  background: #fc4e4e;
  -webkit-transform: skew(0, 2deg);
      -ms-transform: skew(0, 2deg);
          transform: skew(0, 2deg); }

/* Header Component */
.footer {
  position: relative;
  margin-top: calc(9.5rem + .3125vw);
  padding: calc(9.5rem + .3125vw) 0;
  background: #DB3737;
  color: #fff; }
  .footer:before {
    content: " ";
    position: absolute;
    bottom: calc(100% - 2vw);
    width: 100%;
    height: 4vw;
    background: #fc4e4e;
    -webkit-transform: skew(0, 2deg);
        -ms-transform: skew(0, 2deg);
            transform: skew(0, 2deg); }

.footer__separator {
  display: block;
  margin: 0 auto calc(7.1rem + .3125vw);
  max-width: 36rem;
  height: 4px;
  background: #fc4e4e;
  border: 0; }

.clients {
  display: block;
  margin: 0 0 calc(4.7rem + .3125vw);
  padding: 0;
  list-style-type: none; }

.client {
  float: left;
  padding: calc(1.5rem + .3125vw) 0;
  width: 50%;
  text-align: center; }
  @media (min-width: 768px) {
    .client {
      width: 25%; } }
  @media (min-width: 1268px) {
    .client {
      width: 12.5%; } }

.clients__logo {
  max-width: 125px;
  max-height: 40px;
  vertical-align: middle; }

.logo--otto,
.logo--ktm {
  max-height: 25px; }

.social {
  display: block;
  margin: 0 auto;
  padding: 0;
  width: 246px;
  list-style-type: none; }

.social__item {
  float: left;
  display: block;
  width: 25%; }
  .social__item:first-child {
    padding-top: 9px; }
  .social__item:nth-child(2) {
    padding-top: 5px; }
  .social__item:last-child {
    padding-top: 3px; }

.social__link {
  display: block;
  text-align: center;
  transition: -webkit-transform .1s ease-out;
  transition: transform .1s ease-out; }
  .social__link:hover {
    -webkit-transform: translateY(-4px);
        -ms-transform: translateY(-4px);
            transform: translateY(-4px); }
  .social__link:active {
    transition: -webkit-transform .05s ease-out;
    transition: transform .05s ease-out;
    -webkit-transform: translateY(2px);
        -ms-transform: translateY(2px);
            transform: translateY(2px); }

.social__img {
  display: inline-block;
  width: 40px; }

/* Skew Masked Pic Component */
.pic {
  display: inline-block;
  position: relative;
  margin-bottom: calc(2.3rem + .3125vw); }

.pic__img {
  -webkit-clip-path: polygon(0 0, 96% 0, 100% 100%, 4% 100%);
          clip-path: polygon(0 0, 96% 0, 100% 100%, 4% 100%); }

.pic__caption {
  display: inline-block;
  margin-top: calc(-7.1rem - .25vw);
  margin-bottom: calc(1.5rem + .3125vw);
  padding: calc(2.3rem + .3125vw);
  background: #fc4e4e;
  font-size: 1.25em;
  font-weight: 700;
  color: #fff;
  -webkit-transform: skew(3deg);
      -ms-transform: skew(3deg);
          transform: skew(3deg); }
  .pic__caption:after {
    content: " ";
    position: absolute;
    top: .5em;
    left: .5em;
    width: 100%;
    height: 100%;
    border: 4px solid #000; }
  .pic__caption > p {
    margin: 0;
    -webkit-transform: skew(-3deg);
        -ms-transform: skew(-3deg);
            transform: skew(-3deg); }
  @media (min-width: 768px) {
    .pic__caption {
      position: absolute;
      top: 100%;
      left: 0;
      margin: -25% -5%; } }

/* Testimonial Component */
.testimonials {
  margin: 0;
  padding: 0;
  list-style-type: none; }
  @media (min-width: 768px) {
    .testimonials {
      display: grid; } }

.testimonial {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
  margin-bottom: calc(4.7rem + .3125vw); }

.testimonial__pic {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 15%;
          flex: 0 0 15%; }

.testimonial__quote {
  margin-left: calc(2.3rem + .3125vw);
  padding: 0 calc(2.3rem + .3125vw);
  border-left: 4px solid #fc4e4e;
  -webkit-transform: skew(3deg);
      -ms-transform: skew(3deg);
          transform: skew(3deg); }
  .testimonial__quote > * {
    -webkit-transform: skew(-3deg);
        -ms-transform: skew(-3deg);
            transform: skew(-3deg); }

/* Button Component */
.btn {
  position: relative;
  display: block;
  overflow: hidden;
  padding: calc(1.5rem + .3125vw) calc(1.5rem + .3125vw);
  background: #3F6AEB;
  box-shadow: 4px 4px 0 black;
  font-size: 1.563em;
  font-weight: 700;
  color: white;
  text-align: center;
  white-space: nowrap;
  -webkit-transform: skew(3deg);
      -ms-transform: skew(3deg);
          transform: skew(3deg);
  transition: -webkit-transform .1s ease-out, box-shadow .1s ease-out;
  transition: transform .1s ease-out, box-shadow .1s ease-out; }
  .btn:hover {
    color: white;
    text-decoration: none;
    box-shadow: 8px 8px 0 rgba(0, 0, 0, 0.9);
    -webkit-transform: skew(3deg) translateY(-4px);
        -ms-transform: skew(3deg) translateY(-4px);
            transform: skew(3deg) translateY(-4px); }
  .btn:active {
    color: white;
    text-decoration: none;
    box-shadow: 0 0 0 transparent;
    -webkit-transform: skew(3deg) translateY(4px);
        -ms-transform: skew(3deg) translateY(4px);
            transform: skew(3deg) translateY(4px);
    transition: -webkit-transform .05s ease-out, box-shadow .05s ease-out;
    transition: transform .05s ease-out, box-shadow .05s ease-out; }
  .btn > * {
    display: block;
    -webkit-transform: skew(-3deg);
        -ms-transform: skew(-3deg);
            transform: skew(-3deg); }
  .btn + .text--small {
    padding: calc(0.7rem + .3125vw) 0;
    text-align: center; }

/* Skew Heading Component */
.special-heading {
  margin-bottom: calc(2.3rem + .3125vw);
  padding: 0 0 calc(1.5rem + .3125vw);
  border-bottom: 4px solid #fc4e4e; }

/* Home Page */
.intro,
.service,
.feedback,
.discover,
.define,
.develop,
.deliver,
.verify,
.hire,
.research,
.ixd,
.visual-design,
.soft-skills,
.education {
  grid-column: 2 / 11; }
  @media (min-width: 1000px) {
    .intro,
    .service,
    .feedback,
    .discover,
    .define,
    .develop,
    .deliver,
    .verify,
    .hire,
    .research,
    .ixd,
    .visual-design,
    .soft-skills,
    .education {
      grid-column: 3 / 10; } }
  @media (min-width: 1268px) {
    .intro,
    .service,
    .feedback,
    .discover,
    .define,
    .develop,
    .deliver,
    .verify,
    .hire,
    .research,
    .ixd,
    .visual-design,
    .soft-skills,
    .education {
      grid-column: 4 / 10; } }
  @media (min-width: 1920px) {
    .intro,
    .service,
    .feedback,
    .discover,
    .define,
    .develop,
    .deliver,
    .verify,
    .hire,
    .research,
    .ixd,
    .visual-design,
    .soft-skills,
    .education {
      grid-column: 3 / 10; } }

.creed {
  grid-column: 6 / 12;
  grid-row: 2 / 3;
  z-index: 1;
  -ms-flex-item-align: center;
      align-self: center;
  position: relative;
  margin: calc(4.7rem + .3125vw) 0;
  padding: calc(4.7rem + .3125vw);
  background: #fc4e4e;
  font-size: 1.563em;
  font-weight: 700;
  color: #fff;
  -webkit-transform: skew(3deg);
      -ms-transform: skew(3deg);
          transform: skew(3deg); }
  .creed:after {
    content: " ";
    position: absolute;
    top: .5em;
    left: .5em;
    width: 100%;
    height: 100%;
    border: 4px solid #000; }
  .creed > p {
    margin: 0;
    -webkit-transform: skew(-3deg);
        -ms-transform: skew(-3deg);
            transform: skew(-3deg); }

.portrait {
  grid-column: 1 / 8;
  grid-row: 2 / 3; }

@-webkit-keyframes floating {
  0% {
    -webkit-transform: translate3d(0.2em, 0.2em, 0);
            transform: translate3d(0.2em, 0.2em, 0); }
  100% {
    -webkit-transform: translate3d(-0.2em, -0.2em, 0);
            transform: translate3d(-0.2em, -0.2em, 0); } }

@keyframes floating {
  0% {
    -webkit-transform: translate3d(0.2em, 0.2em, 0);
            transform: translate3d(0.2em, 0.2em, 0); }
  100% {
    -webkit-transform: translate3d(-0.2em, -0.2em, 0);
            transform: translate3d(-0.2em, -0.2em, 0); } }

@-webkit-keyframes wiggle {
  0% {
    -webkit-transform: translateX(0);
            transform: translateX(0); }
  100% {
    -webkit-transform: translateX(40px);
            transform: translateX(40px); } }

@keyframes wiggle {
  0% {
    -webkit-transform: translateX(0);
            transform: translateX(0); }
  100% {
    -webkit-transform: translateX(40px);
            transform: translateX(40px); } }

/* Skills Page */
.research,
.visual-design {
  grid-column: 2 / 6; }
  @media (min-width: 1000px) {
    .research,
    .visual-design {
      grid-column: 3 / 6; } }
  @media (min-width: 1268px) {
    .research,
    .visual-design {
      grid-column: 4 / 7; } }
  @media (min-width: 1920px) {
    .research,
    .visual-design {
      grid-column: 3 / 6; } }

.ixd,
.soft-skills {
  grid-column: 7 / 11; }
  @media (min-width: 1000px) {
    .ixd,
    .soft-skills {
      grid-column: 7 / 10; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
